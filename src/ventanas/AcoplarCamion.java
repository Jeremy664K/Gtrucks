/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ventanas;

import clases.Conexion;
import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jeremy
 */
public class AcoplarCamion extends javax.swing.JFrame {

    /**
     * Creates new form AcoplarRemolque
     */
    int id_remolque = GestionDeRemolques.id_remolqueUpdate;
    
    public AcoplarCamion() {
        initComponents();

        this.setTitle("Acoplar Camion");
        this.setSize(575, 400);
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        this.getContentPane().setBackground(new Color(255, 255, 255));
        this.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

        try {

            DefaultTableModel model = new DefaultTableModel();

            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement("select ID, marca, modelo, estatus from camiones where marca != 'No Asignado' and modelo != 'No Asignado' and estatus != 'Ocupado'");

            ResultSet rs = pst.executeQuery();

            tabla_camiones = new JTable(model);
            jScrollPane1.setViewportView(tabla_camiones);

            model.addColumn("ID");
            model.addColumn("Marca");
            model.addColumn("Modelo");
            model.addColumn("Estatus");

            while (rs.next()) {
                Object fila[] = new Object[4];

                for (int i = 0; i < 4; i++) {

                    fila[i] = rs.getObject(i + 1);

                }

                model.addRow(fila);

            }

            cn.close();

            tabla_camiones.addMouseListener(new MouseAdapter() {

                // Evento de mouse para saber que fila selecciono el usuario 
                @Override
                public void mouseClicked(MouseEvent e) {

                    int fila_point = tabla_camiones.rowAtPoint(e.getPoint());

                    if (fila_point > -1) {

                        String id_camion = model.getValueAt(fila_point, 0).toString();
                        String marca = model.getValueAt(fila_point, 1).toString();
                        String modelo = model.getValueAt(fila_point, 2).toString();

                        String eleccion = JOptionPane.showInputDialog(null, "¿Deseas Acoplar el Camion " + id_camion + "? (Si / No)");

                        if (eleccion.equalsIgnoreCase("Si") || eleccion.equalsIgnoreCase("S")) {

                            try {

                                Connection cn = Conexion.conectar();
                                PreparedStatement pst = cn.prepareStatement(
                                 "update camiones set marca = ?, modelo = ? where ID = '" + id_remolque + "'");

                                pst.setString(1, marca);
                                pst.setString(2, modelo);
                                
                                pst.executeUpdate();
                                
                                cn.close();
                                JOptionPane.showMessageDialog(null, "Camion Anclado con Exito");
                                
                                dispose();
                                
                            } catch (SQLException x) {
                                System.out.println("Error al anclar Camion al Remolque: \n" + x);
                                JOptionPane.showMessageDialog(null, "Error al anclar Camion al Remolque, Contacte con el Administrador");
                            }

                        } else {

                        }
                    }
                }
            });

        } catch (SQLException e) {
            System.err.println("Error, al rellenar la tabla de Acoplar Camion: \n " + e);
            JOptionPane.showMessageDialog(null, "Error, al rellenar la tabla de Acoplar Camion, contacte con el Administrador");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_camiones = new javax.swing.JTable();
        boton_modificar = new javax.swing.JButton();
        boton_modificar1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setType(java.awt.Window.Type.UTILITY);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 153, 0));
        jLabel1.setText("Acoplar Camion");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 10, -1, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Camiones Disponibles:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, -1, -1));

        tabla_camiones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabla_camiones);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 500, 150));

        boton_modificar.setBackground(new java.awt.Color(255, 153, 0));
        boton_modificar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        boton_modificar.setForeground(new java.awt.Color(255, 255, 255));
        boton_modificar.setText("Registrar Camion");
        boton_modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_modificarActionPerformed(evt);
            }
        });
        getContentPane().add(boton_modificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, 230, 40));

        boton_modificar1.setBackground(new java.awt.Color(255, 153, 0));
        boton_modificar1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        boton_modificar1.setForeground(new java.awt.Color(255, 255, 255));
        boton_modificar1.setText("Actualizar");
        boton_modificar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_modificar1ActionPerformed(evt);
            }
        });
        getContentPane().add(boton_modificar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 300, 230, 40));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void boton_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_modificarActionPerformed

        new RegistrarCamion().setVisible(true);
        
    }//GEN-LAST:event_boton_modificarActionPerformed

    private void boton_modificar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_modificar1ActionPerformed
        try {

            DefaultTableModel model = new DefaultTableModel();

            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement("select ID, marca, modelo, estatus from camiones where marca != 'No Asignado' and modelo != 'No Asignado' and estatus != 'Ocupado'");

            ResultSet rs = pst.executeQuery();

            tabla_camiones = new JTable(model);
            jScrollPane1.setViewportView(tabla_camiones);

            model.addColumn("ID");
            model.addColumn("Marca");
            model.addColumn("Modelo");
            model.addColumn("Estatus");

            while (rs.next()) {
                Object fila[] = new Object[4];

                for (int i = 0; i < 4; i++) {

                    fila[i] = rs.getObject(i + 1);

                }

                model.addRow(fila);

            }

            cn.close();

            tabla_camiones.addMouseListener(new MouseAdapter() {

                // Evento de mouse para saber que fila selecciono el usuario 
                @Override
                public void mouseClicked(MouseEvent e) {

                    int fila_point = tabla_camiones.rowAtPoint(e.getPoint());

                    if (fila_point > -1) {

                        String id_camion = model.getValueAt(fila_point, 0).toString();
                        String marca = model.getValueAt(fila_point, 1).toString();
                        String modelo = model.getValueAt(fila_point, 2).toString();

                        String eleccion = JOptionPane.showInputDialog(null, "¿Deseas Acoplar el Camion " + id_camion + "? (Si / No)");

                        if (eleccion.equalsIgnoreCase("Si") || eleccion.equalsIgnoreCase("S")) {

                            try {

                                Connection cn = Conexion.conectar();
                                PreparedStatement pst = cn.prepareStatement(
                                 "update camiones set marca = ?, modelo = ? where ID = '" + id_remolque + "'");

                                pst.setString(1, marca);
                                pst.setString(2, modelo);
                                
                                pst.executeUpdate();
                                
                                cn.close();
                                JOptionPane.showMessageDialog(null, "Camion Anclado con Exito");
                                
                                dispose();
                                
                            } catch (SQLException x) {
                                System.out.println("Error al anclar Camion al Remolque: \n" + x);
                                JOptionPane.showMessageDialog(null, "Error al anclar Camion al Remolque, Contacte con el Administrador");
                            }

                        } else {

                        }
                    }
                }
            });

        } catch (SQLException e) {
            System.err.println("Error, al rellenar la tabla de Acoplar Camion: \n " + e);
            JOptionPane.showMessageDialog(null, "Error, al rellenar la tabla de Acoplar Camion, contacte con el Administrador");
        }

    }//GEN-LAST:event_boton_modificar1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AcoplarCamion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AcoplarCamion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AcoplarCamion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AcoplarCamion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AcoplarCamion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boton_modificar;
    private javax.swing.JButton boton_modificar1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla_camiones;
    // End of variables declaration//GEN-END:variables
}
